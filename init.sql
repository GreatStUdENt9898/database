CREATE DATABASE IF NOT EXISTS Skill_Based_Freelancing_Management_System;
USE Skill_Based_Freelancing_Management_System;

CREATE TABLE IF NOT EXISTS USER (
    User_ID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Role ENUM('Freelancer', 'Employer') NOT NULL,
    Contact VARCHAR(20),
    Password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS SKILL (
    Skill_ID INT AUTO_INCREMENT PRIMARY KEY,
    Skill_Name VARCHAR(100) NOT NULL,
    Description TEXT
);

CREATE TABLE IF NOT EXISTS USER_SKILL (
    User_ID INT,
    Skill_ID INT,
    PRIMARY KEY (User_ID, Skill_ID),
    FOREIGN KEY (User_ID) REFERENCES USER(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Skill_ID) REFERENCES SKILL(Skill_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TASK (
    Task_ID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(150) NOT NULL,
    Description TEXT,
    Category VARCHAR(100),
    Budget DECIMAL(10,2),
    Deadline DATE,
    Employer_ID INT,
    FOREIGN KEY (Employer_ID) REFERENCES USER(User_ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS APPLICATION (
    App_ID INT AUTO_INCREMENT PRIMARY KEY,
    Task_ID INT,
    Freelancer_ID INT,
    Status ENUM('Pending', 'Accepted', 'Rejected', 'Completed') DEFAULT 'Pending',
    Date_Applied DATE DEFAULT (CURRENT_DATE),
    FOREIGN KEY (Task_ID) REFERENCES TASK(Task_ID) ON DELETE CASCADE,
    FOREIGN KEY (Freelancer_ID) REFERENCES USER(User_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FEEDBACK (
    Feedback_ID INT AUTO_INCREMENT PRIMARY KEY,
    App_ID INT,
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Comment TEXT,
    FOREIGN KEY (App_ID) REFERENCES APPLICATION(App_ID) ON DELETE CASCADE
);
